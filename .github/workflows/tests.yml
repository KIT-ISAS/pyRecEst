name: Test workflow

permissions:
  contents: read
  checks: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-numpy:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry env use python
          poetry install --extras "healpy_support"
          poetry run python -m pip install torch==2.1.0+cpu torchaudio==2.1.0+cpu -f https://download.pytorch.org/whl/torch_stable.html

      - name: Run tests with numpy backend
        run: |
          export PYRECEST_BACKEND=numpy
          poetry run python -m pytest --rootdir . -v --strict-config --junitxml=junit_test_results_numpy.xml ./pyrecest
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Upload numpy test result artifact
        uses: actions/upload-artifact@v3
        with:
          name: numpy-test-results
          path: junit_test_results_numpy.xml

  test-pytorch:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry env use python
          poetry install --extras "healpy_support" --extras "pytorch_support"
          poetry run python -m pip install torch==2.1.0+cpu torchaudio==2.1.0+cpu -f https://download.pytorch.org/whl/torch_stable.html

      - name: Run tests with pytorch backend
        run: |
          export PYRECEST_BACKEND=pytorch
          poetry run python -m pytest --rootdir . -v --strict-config --junitxml=junit_test_results_pytorch.xml ./pyrecest
        env:
          PYTHONPATH: ${{ github.workspace }}

  test-jax:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry env use python
          poetry install --extras "healpy_support" --extras "jax_support"

      - name: Run tests with jax backend
        run: |
          export PYRECEST_BACKEND=jax
          poetry run python -m pytest --rootdir . -v --strict-config --junitxml=junit_test_results_jax.xml ./pyrecest
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Upload jax test result artifact
        uses: actions/upload-artifact@v3
        with:
          name: jax-test-results
          path: junit_test_results_jax.xml

  publish-results:
    needs: [test-numpy, test-pytorch, test-jax]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Download all test result artifacts
        uses: actions/download-artifact@v3
        with:
          path: test-results

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            test-results/numpy-test-results/junit_test_results_numpy.xml
            test-results/pytorch-test-results/junit_test_results_pytorch.xml
            test-results/pytorch-test-results/junit_test_results_jax.xml
